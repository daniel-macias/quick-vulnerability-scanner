import type { NextApiRequest, NextApiResponse } from 'next';
import axios from 'axios';
import formidable, { Files } from 'formidable';
import fs from 'fs';
import FormData from 'form-data';

export const config = {
  api: {
    bodyParser: false,
  },
};

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  if (req.method === 'POST') {
    const form = new formidable.IncomingForm();

    form.parse(req, async (err, fields, files: Files) => {
      if (err) {
        console.error('Error processing form data', err);
        return res.status(500).json({ message: 'Error processing form data' });
      }

      // Check if the files['file'] is an array and has at least one file
      const fileArray = files.file instanceof Array ? files.file : [files.file];
      const file = fileArray.find(f => Boolean(f))?.filepath; // Find the first defined file

      if (!file) {
        return res.status(400).json({ message: 'No file uploaded' });
      }

      try {
        const formData = new FormData();
        formData.append('file', fs.createReadStream(file));

        const virusTotalResponse = await axios.post('https://www.virustotal.com/api/v3/files', formData, {
          headers: {
            'x-apikey': process.env.NEXT_PUBLIC_VT_API_KEY,
            ...formData.getHeaders(),
          },
        });

        res.status(200).json(virusTotalResponse.data);
      } catch (error) {
        console.error('Error scanning file:', error);
        res.status(500).json({ message: 'Error fetching data from VirusTotal'});
      }
    });
  } else {
    res.setHeader('Allow', ['POST']);
    res.status(405).end(`Method ${req.method} Not Allowed`);
  }
}