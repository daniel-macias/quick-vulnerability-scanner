'use client'
import React, { useState } from 'react';
import axios from 'axios';

import DomainScanner from '@/components/Scanners/DomainScanner';
import FileScanner from '@/components/Scanners/FileScanner';
import IPScanner from '@/components/Scanners/IPScanner';
import URLScanner from '@/components/Scanners/URLScanner';

const DomainResults = dynamic(() => import('@/components/Results/DomainResults'), {
  ssr: false,
});

const FileResults = dynamic(() => import('@/components/Results/FileResults'), {
  ssr: false,
});

const IPResults = dynamic(() => import('@/components/Results/IPResults'), {
  ssr: false,
});

const URLResults = dynamic(() => import('@/components/Results/URLResults'), {
  ssr: false,
});


import { AiOutlineSecurityScan } from "react-icons/ai";
import { MdOutlineSecurity } from "react-icons/md";

import dynamic from 'next/dynamic';



export default function Home() {
  const [currentScanType, setCurrentScanType] = useState('');
  const [scanData, setScanData] = useState({});

  const handleScan = (scanType : string, data: React.SetStateAction<{}>) => {
    setCurrentScanType(scanType);
    setScanData(data);
    console.log(data);
  };

  return (
      <div className="min-h-screen grid md:grid-cols-5 max-h-screen-xl mx-auto">
      {/* Left Half */}
      
      <div className="grid md:grid-rows-6 md:col-span-3 h-full">
        {/* Left Bottom (1/6) */}

        {/* Left Top (5/6) */}
        <div className="md:row-span-6 bg-[#28282d] h-full rounded-md p-4 flex items-center justify-center">
          <div className="bg-[#28282d] h-full rounded-md p-4 flex items-center justify-center">
            {/* Content for the top left section */}
            <div>
              <div>
              {/* Choose the appropriate scan component based on the currentScanType */}
              {currentScanType === null && (
                <div>
                  <div className="flex flex-col items-center text-center">
                    <div className="flex items-center text-center pb-4">
                      <MdOutlineSecurity size={42} className="text-blue-500" /> {/* Adjust the size and color as needed */}
                      <h2 className="ml-4 text-x2">Infosec MultiTool 1.0</h2> {/* Adjust the margin and text size as needed */}
                    </div>
                    <h1 className="text-2xl mb-4">Please choose a scanning option of your choosing and press the:</h1>
                    <p className="text-6xl"><AiOutlineSecurityScan /></p>
                    <h1 className="text-2xl mt-4">button on its side</h1>
                  </div>
                </div>
              )}
              {currentScanType === 'url' && (
                <URLResults data={scanData} />
              )}
              {currentScanType === 'ip' && (
                <IPResults data={scanData} />
              )}
              {currentScanType === 'file' && (
                <FileResults data={scanData} />
              )}
              {currentScanType === 'domain' && (
                <DomainResults data={scanData} />
              )}
            </div>
            </div>
          </div>
        </div>


      </div>

      {/* Right Half */}
      <div className="grid md:grid-rows-4 md:col-span-2">
        {/* Right Top (1/4) */}
        <div className="md:row-span-1 bg-[#28282d] h-full rounded-md p-4">
          <FileScanner onScan={(data) => handleScan('file', data)} />
        </div>

        {/* Right Top (1/4) */}
        <div className="md:row-span-1 bg-[#28282d] h-full rounded-md p-4">
          <URLScanner onScan={(data) => handleScan('url', data)} />
        </div>

        {/* Right Top (1/4) */}
        <div className="md:row-span-1 bg-[#28282d] h-full rounded-md p-4">
          <IPScanner onScan={(data) => handleScan('ip', data)} />
        </div>

        {/* Right Top (1/4) */}
        <div className="md:row-span-1 bg-[#28282d] h-full rounded-md p-4">
          <DomainScanner onScan={(data) => handleScan('domain', data)} />
        </div>
      </div>
    </div>
  );
}
