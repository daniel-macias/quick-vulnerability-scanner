import React, { FC } from 'react';
import ReactApexChart from 'react-apexcharts';
import { ApexOptions } from 'apexcharts';

interface IPResultsProps {
  data: any;
}

const IPResults: FC<IPResultsProps> = ({ data }) => {

  const donutChartOptions: ApexOptions = {
    chart: {
      type: 'donut',
      dropShadow: {
        enabled: true,
      },
      
    },
    
    labels: ['Harmless', 'Malicious', 'Suspicious', 'Timeout', 'Undetected'], // Example labels
    colors: ['#00E396', '#FF4560', '#FEB019', '#A5978B', '#008FFB'],
    dataLabels: {
      enabled: true,
      style: {
        fontSize: '14px', // Adjust font size as needed
        colors: ['#ffffff'], // Text color
        fontWeight: '400'
      },
      background: {
        enabled: true,
        foreColor: '#fff', // Foreground color for the label text
        borderColor: '#fff', // Border color
        borderWidth: 2, // Border width
        borderRadius: 0, // Border radius for rounded corners
        padding: 4, // Padding around the text
        opacity: 0.2, // Background opacity
      },
      dropShadow: {
        enabled: true,
        top: 1,
        left: 1,
        blur: 5,
        opacity: 0.45,
      }
    },
    responsive: [{
      breakpoint: 480,
      options: {
        chart: {
          width: 200,
        },
        legend: {
          position: 'bottom',
          labels: {
            colors: '#ffffff', // This directly sets the legend text color
            useSeriesColors: false // Ensure the series colors are not used for text
          }
        },
      },
    }],
    stroke: {
      show: false,
    },
    legend: {
      labels: {
        colors: '#ffffff', // Ensuring the text color is white for all screen sizes
        useSeriesColors: false,
      },
    },
  };

  const donutseries = [44, 55, 41, 17, 10]; // Assuming 'data' is an array of numbers for the chart

  const stackeOptions: ApexOptions = {
    chart: {
      type: 'bar',
      stacked: true,
      toolbar: {
        show: false
      },
    },
    colors: ['#00E396', '#FF4560'], // Custom colors for "Harmless" and "Malicious"
    plotOptions: {
      bar: {
        horizontal: true,
        barHeight: '100%', // Adjust as needed
        dataLabels: {
          position: 'center', // Position data labels in the center of each bar
        },
      },
    },
    dataLabels: {
      enabled: true,
      textAnchor: 'start',
      style: {
        colors: ['#fff'],
      },
      offsetX: 0,
      dropShadow: {
        enabled: true
      }
    },
    stroke: {
      width: 0
    },
    grid: {
      show: false,
    },
    xaxis: {
      categories: [''],
      labels: {
        show: false,
      },
      axisBorder: {
        show: false,
      },
      axisTicks: {
        show: false,
      },
    },
    yaxis: {
      show: false
    },
    legend: {
      position: 'top',
      horizontalAlign: 'center',
      labels: {
        colors: ['#fff','#fff'], // Legend label colors
        useSeriesColors: false
      }
    },
    
    fill: {
      opacity: 1
    },
  };

  const stackedseries = [{
    name: 'Harmless',
    data: [703] // Example percentage for "Harmless"
  }, {
    name: 'Malicious',
    data: [30] // Example percentage for "Malicious"
  }];

  return (
    <div className="min-h-screen grid md:grid-cols-5 max-h-screen-xl mx-auto">
      {/* Left Half */}
      <div className="grid md:grid-rows-6 md:col-span-3 h-full">
        <div className="md:row-span-4 bg-[#28282d] h-full rounded-md pt-4">
          <ReactApexChart options={donutChartOptions} series={donutseries} type="donut" width="380" />
        </div>

        {/* Right Top (1/4) */}
        <div className="md:row-span-2 bg-[#28282d] h-full rounded-md">
        <ReactApexChart options={stackeOptions} series={stackedseries} type="bar" height={"100"} />
        </div>
      </div>
      {/* Right Half */}
      <div className="grid md:grid-rows-4 md:col-span-2">
        C
      </div>
    </div>
  )
}

export default IPResults